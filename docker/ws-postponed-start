#!/bin/bash

CMD=`basename $0`

TIMEOUT=600

if [ $# -ne 3 ]; then
    echo "USAGE: bash $CMD <dependency servers>" >&2
    echo "EXAMPLE: bash $CMD localhost:8787 localhost:59125 localhost:1200" >&2   
    exit 1
fi


s1=$1
s2=$2
s3=$3

s1host=`echo $s1|cut -f1 -d:`
s1port=`echo $s1|cut -f2 -d:`

s2host=`echo $s2|cut -f1 -d:`
s2port=`echo $s2|cut -f2 -d:`

s3host=`echo $s3|cut -f1 -d:`
s3port=`echo $s3|cut -f2 -d:`

for i1 in `seq $TIMEOUT` ; do
    echo "[$CMD] Waiting for $s1 to start" 2>&1
    nc -z $s1host $s1port > /dev/null 2>&1
    curl $s1 > /dev/null 2>&1
    
    result=$?
    if [ $result -eq 0 ] ; then
	echo "[$CMD] Service up and running: $s1" 2>&1

	for i2 in `seq $TIMEOUT` ; do
	    echo "[$CMD] Waiting for $s2 to start" 2>&1
	    nc -z $s2host $s2port > /dev/null 2>&1
	    curl $s2 > /dev/null 2>&1
	    
	    result=$?
	    if [ $result -eq 0 ] ; then
		echo "[$CMD] Service up and running: $s2" 2>&1

		for i3 in `seq $TIMEOUT` ; do
		    echo "[$CMD] Waiting for $s3 to start" 2>&1
		    nc -z $s3host $s3port > /dev/null 2>&1
		    curl $s3 > /dev/null 2>&1
		    
		    result=$?
		    if [ $result -eq 0 ] ; then
			echo "[$CMD] Service up and running: $s3" 2>&1

			echo "[$CMD] All required servers up and running, starting wikispeech" 2>&1
			if cd /wikispeech/wikispeech_mockup ; then
			    python3 bin/wikispeech docker/config/docker-compose.conf
			    exit $?
			else
			    exit 1
			fi
		    fi
		    sleep 5			    
		done
	    fi
	    sleep 5
	done	
    fi
    sleep 5
done

echo "[$CMD] Reached timeout for service dependencies: $s1 && $s2 && $s3" 2>&1
exit 1
