# go is for pronlex
#language: go
go:
  - 1.10.x

# java is for marytts
#language: java
jdk:
 - openjdk8

language: python
python:
   - "3.6"
  
before_install:
 - set -e

notifications:
  email:
    on_success: change
    on_failure: change

env:
 - RELEASE=docker_user
 # TODO; l√§gg till senare - RELEASE=docker_user DO_IMPORT=1

# https://blog.travis-ci.com/2017-12-12-new-trusty-images-q4-launch
# sudo: required
# dist: trusty
# group: deprecated-2017Q4
 
# for marytts
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

install:
 - sudo apt install golang-1.10 opus-tools
 - sudo apt-cache search jdk
 - sudo apt-cache search golang
 - sudo pip install --upgrade pip
 - pip install -r requirements.txt

# command to run tests
script:
 - set -e
 - export basedir=`pwd`
 
 - mkdir -p $GOPATH/src/github.com/stts-se && cd $GOPATH/src/github.com/stts-se/
 - git clone https://github.com/stts-se/pronlex.git
 - cd pronlex
 - git checkout $RELEASE || echo "No such release for pronlex. Using master."
 - go version
 - go get ./...
 - bash install/setup.sh /tmp/appdir
 - bash install/start_server.sh -a /tmp/appdir &
 - export pronlex_pid=$!
 - echo "pronlex started with pid $pronlex_pid"
 - sleep 20
 
 - cd $basedir
 - git clone https://github.com/stts-se/marytts.git
 - cd marytts
 - git checkout $RELEASE || echo "No such release for marytts. Using master."
 - ./gradlew check
 - ./gradlew assembleDist
 - ./gradlew test
 - ./gradlew run &
 - export marytts_pid=$!
 - echo "marytts started with pid $marytts_pid"
 - sleep 20
 
 - cd $basedir
 - python3 bin/wikispeech docker/config/travis.conf &
 - export wikispeech_pid=$!  
 - echo "wikispeech started with pid $wikispeech_pid"
 - sleep 20
 
 - sh .travis/exit_server_and_fail_if_not_running.sh wikispeech $wikispeech_pid
 - sh .travis/exit_server_and_fail_if_not_running.sh marytts $marytts_pid
 - sh .travis/exit_server_and_fail_if_not_running.sh pronlex $pronlex_pid
 
 - docker build . -t wikispeech
